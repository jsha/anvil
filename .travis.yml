language: go

go:
  - 1.5.3

addons:
  hosts:
    - le.wtf
    - boulder
    - boulder-mysql
    - boulder-rabbitmq
  apt:
    packages:
      - lsb-release
      - python-dev
      - python-virtualenv
      - gcc
      - libaugeas0
      - libssl-dev
      - libffi-dev
      - ca-certificates
      - rsyslog
  mariadb: "10.0"

sudo: false

services:
  - rabbitmq

matrix:
  fast_finish: true

# Only build pushes to the master branch, PRs, and branches beginning with
# `test-`. You should not push branches beginning with `test-` to the
# letsencrypt repository, but this is a convenient way to push branches to your
# own fork of the repostiroy to ensure Travis passes before submitting a PR.
# For instance, you might run:
# git push myremote branchname:test-branchname
branches:
  only:
    - master
    - staging
    - release
    - /^test-.*$/

# By providing our own install command we avoid Travis' default Go install
# command, which runs `go get`. We specifically want to avoid that because we
# want to ensure all our dependencies are vendored.
install:
  # Boulder consists of multiple Go packages, which
  # refer to each other by their absolute GitHub path,
  # That means, by default, if someone forks the repo,
  # Travis won't pass on their own repo. To fix that,
  # we add a symlink and cd there.
  - ln -sf $TRAVIS_BUILD_DIR $GOPATH/src/github.com/letsencrypt/boulder
  - cd $GOPATH/src/github.com/letsencrypt/boulder
  - travis_retry test/travis-before-install.sh
  - travis_retry test/setup.sh

env:
  global:
    - PATH=$HOME/bin:$PATH # protoc gets installed here
    - LETSENCRYPT_PATH=$HOME/letsencrypt
    - GO15VENDOREXPERIMENT=1
  matrix:
    - RUN="godep-restore generate"

script:
  - bash test.sh

